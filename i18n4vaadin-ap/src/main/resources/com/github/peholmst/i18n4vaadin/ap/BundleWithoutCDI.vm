package ${packageName};

import com.github.peholmst.i18n4vaadin.util.I18NHolder;
import java.text.MessageFormat;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
import javax.annotation.Generated;

/**
 * Please note that this class is not thread safe! Invocations from multiple
 * threads must be synchronized!
 */
@Generated(value = "${generator}", date = "${generationDate}")
public class Bundle implements java.io.Serializable {

    protected Locale getLocale() {
        return I18NHolder.get().getLocale();
    }

    protected ResourceBundle getBundle() {
        return ResourceBundle.getBundle("${packageName}.messages", getLocale());
    }

#foreach ($property in $properties)
    public String $property.replace('.','_')(Object... args) {
        return getMessage("$property", args);
    }
#end

    public static final class Keys {

        private Keys() {
        }
#foreach ($property in $properties)
        public static final String $property.replace('.','_') = "$property";
#end
    }

    public String getMessage(String key, Object... args) {
        try {
            final MessageFormat mf = new MessageFormat(getBundle().getString(key), getLocale());
            return mf.format(args, new StringBuffer(), null).toString();
        } catch (MissingResourceException e) {
            return "!" + key;
        }
    }
}
